#!/usr/bin/env bash
# RedHat startup script for a supervisor instance
# chkconfig: - 90 15
# description: supervisor init script

### BEGIN INIT INFO
# Provides:          supervisor.${v:project}
# Required-Start:    $syslog $network $time
# Required-Stop:     $syslog $network
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: ${v:project}
# Description:       ${v:project}
### END INIT INFO


TMPDIR="${locations:tmp}"
EFFECTIVE_USER="${v:sys-user}"
INSTANCE_PATH="${buildout:directory}"
INSTANCE_NAME="$(basename ${buildout:directory})"
supervisorctl="${buildout:directory}/bin/supervisorctl"
supervisord="${buildout:directory}/bin/supervisord"
name="supervisord_${v:project}_$INSTANCE_NAME"

export TMPDIR

[ -f $supervisord ] || exit 1
[ -f $supervisorctl ] || exit 1

RETVAL=0

start() {
    echo -n "Starting $name: "
    if [[ `whoami` == root ]];then
        su $EFFECTIVE_USER -c "bash -c \"$supervisord\""
    else
      "$supervisord"
    fi
    RETVAL=$?
    echo
    return $RETVAL
}

status() {
    ( \
    export LC_ALL=C LANG=C;\
    if [[ `whoami` == root ]];then \
        su $EFFECTIVE_USER -c "$supervisorctl status"; \
    else \
        $supervisorctl status; \
    fi; )
}

stop() {
    WAIT_STOP=10
    STOP_RETRIES=$WAIT_STOP
    echo -n "Stopping $name: "
    if [[ `whoami` == root ]];then
        su $EFFECTIVE_USER -c "$supervisorctl shutdown"
    else
        $supervisorctl shutdown
    fi
    RETVAL=$?
    if [[ $RETVAL == 0 ]]; then
        RETVAL=4
        while [ $STOP_RETRIES -gt 0 ]; do
            STOP_RETRIES=$(($STOP_RETRIES - 1))
            if ! ( status 2>&1 | grep -iq refused );then
                echo "Supervision still running"
                sleep 1
            else
                RETVAL=0
                break
            fi
        done
    fi
    echo
    return $RETVAL
}

do_start() {
    WAIT_START=60
    START_RETRIES=$WAIT_START
    echo "Trying to start: $name"
    while [ $START_RETRIES -gt 0 ]; do
        START_RETRIES=$(($START_RETRIES - 1))
        # each 10 seconds, also try to stop
        if [[ $(($START_RETRIES % 10 )) == 0 ]];then
            stop
        fi
        sleep 1
        if ! start; then
            echo "Failed to start: $name (may retry)"
            RETVAL=1
        else
            echo "Started: $name"
            RETVAL=0
            break
        fi
    done
    return $RETVAL
}

case "$1" in
    # do not use status as it wont play nice with systemd
    print_status)
        status
        ;;
    start)
        do_start;;
    stop)
        stop;;
    restart)
        stop
        do_start
        ;;
esac
exit $REVAL
# vim:set ft=sh:
