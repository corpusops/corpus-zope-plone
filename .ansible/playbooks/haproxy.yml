---
# HAPROXY
- hosts: "{{zope_servers}}"
  gather_facts: no
  tasks:
    - when:
      - "haproxy_servers|copsf_bool"
      - >
        (cops_zope_lifecycle_haproxy|default(false)) and
        (cops_zope_dynamic_haproxy|default(false))
      setup: {}
- hosts: "{{haproxy_servers}}"
  roles: [{role: corpusops.roles/ansible_plugins}]
  gather_facts: no
  tasks:
    - when: ["haproxy_servers|copsf_bool",
             cops_zope_dynamic_haproxy]
      block:
      - setup: {}
      - include_role: {name: zope_haproxy_vars}
- hosts: "{{haproxy_servers}}"
  gather_facts: no
  tasks:
    - when: ["haproxy_servers|copsf_bool",
             "cops_zope_lifecycle_haproxy"]
      tags: [cops_zope_lifecycle_haproxy]
      become: true
      block:
      - include_role: {name: corpusops.roles/haproxy_registrations}
        vars: {_corpusops_haproxy_registrations: {check_config: false}}
        when: "cops_zope_lifecycle_haproxy_registrations"
        tags: [cops_zope_lifecycle_haproxy_registrations]
      - include_role: {name: corpusops.roles/services_proxy_haproxy}
        when: "cops_zope_lifecycle_haproxy_config"
        tags: [cops_zope_lifecycle_haproxy_config]
      - cops_service:
          name: haproxy
          state: "{{cops_zope_vars.haproxy_restart_action}}"
        when: "cops_zope_lifecycle_haproxy_reload"
        tags: [cops_zope_lifecycle_haproxy_reload]
