---
- include_role: {name: corpusops.roles/vars, allow_duplicates: false}
- include_role: {name: zope_steps, allow_duplicates: false}
# compute some defaults
- set_fact:
    cacheable: false
    # Set absolute path to app role (for templates path)
    cops_zope_vrole_path: "{{role_path.replace('_vars', '')}}"

# Generate passwords on remote box if not found in registry
- name: "zope secrets -- {{zopesecret}}}"
  loop_control: {loop_var: secretvariable}
  loop: "{{cops_zope_secret_variables}}"
  no_log: "{{not (cops_vars_debug|default(false))}}"
  include_tasks: _set_secret_variable.yml

# Set the cops_zope_vars var from defaults/main.yml
- name: "zope registry init"
  include_jinja_vars:
    content: |
      {%- set prefix = 'cops_zope_' %}
      {%- set p = prefix + 'vars' %}
      {%- set registry = lookup('cops_registry', prefix) %}
      {{ {p: registry[p]}|to_json}}
  tags: [zope, vars, zope_vars]
  no_log: "{{not (cops_vars_debug|default(false))}}"

# Post process some variables
- name: "zope registry - postprocess"
  include_jinja_vars:
    content: |
      {%- set prefix = 'cops_zope_' %}
      {%- set p = prefix + 'vars' %}
      {%- set namespaced = vars[p] %}
      {%- set registry = {p: namespaced} %}
      {%- set env = registry[p].env %}
      {%- set _ = env.update(registry[p].env_overrides) %}
      {#- filter user env #}
      {%- for i, val in vars.get('ansible_env', {}).items() %}
      {%-  if not i.startswith(
              ('OLDPWD', 'CWD', 'PWD',
               'TERM', 'USER', 'HOME', 'PS1',
               'PATH', 'ANSIBLE', 'SSH', 'LS')) %}
      {%-    set _ = env.update({i: val})%}
      {%-  endif %}
      {%- endfor %}
      {%- for name, val in namespaced.items() %}
      {%-    set _ = registry.update({prefix+name: val}) %}
      {%- endfor %}
      {{ registry | to_json }}
  tags: [zope, vars, zope_vars]
  no_log: "{{not (cops_vars_debug|default(false))}}"
