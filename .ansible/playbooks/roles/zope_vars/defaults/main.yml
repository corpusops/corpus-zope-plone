---
cops_zope_dynamic_haproxy: true
corpusops_core_projects_path: /srv/projects
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
cops_zope__supereditors_paths: |-
  {% set res = [
    vars['cops_zope_project_root'],
    vars['cops_zope_data_root']] %}
  {% if ansible_virtualization_type in ['docker'] %}
  {%  set _ = res.extend(['/srv/backups', '/setup']) %}
  {% endif %}
  {{ res | to_json }}
# space separated string of uids to allow to write inside
# projetct directories (used in development through posix ACLS setter)
cops_zope__supereditors: >-
  {{ ansible_env.get(
      'SUPEREDITORS', cops_supereditors|default('')
     ) | copsf_splitstrip | to_json }}
cops_zope_supereditors_paths: "{{vars['cops_zope__supereditors_paths']}}"
cops_zope_supereditors: "{{vars['cops_zope__supereditors']}}"
# on old ubuntu "virtualenv" does not exists, we isolate venv install
cops_zope_venv_deb_packages: [virtualenv, python-virtualenv]
cops_zope_venv_rh_packages: [virtualenv]
# cops_zope_deb_packages is initialised on behalf of cops_registry voodoo
# and let users override the list easily
cops_zope_deb_gis_packages:
  - gdal-bin
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libgdal1h
    {%- elif (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '16.04'|copsf_looseversion) -%}
    libgdal1i
    {%- else -%}
    libgdal20
    {%- endif -%}"
  - geoip-bin
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libgeos-c1
    {%- elif (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '16.04'|copsf_looseversion) -%}
    libgeos-c1v5
    {%- else -%}
    libgeos-c1v5
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libgeos-3.4.2
    {%- elif (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '16.04'|copsf_looseversion) -%}
    libgeos-3.5.0
    {%- else -%}
    libgeos-3.6.2
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <
          '14.04'|copsf_looseversion) -%}
    libgeoip
    {%- else -%}
    libgeoip1
    {%- endif -%}"
cops_zope_deb_runtime_packages:
  - apache2-utils
  - bzip2
  - gettext
  - git
  - groff
  - libcurl3
  - libfreetype6
  - liblcms2-2
  - libsqlite0
  - libsqlite3-0
  - libtiff5
  - libtool
  - python-setuptools
  - python-numpy
  - cython
  - m4
  - man-db
  - pkg-config
  - poppler-utils
  - "{% if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >= '18.04'|copsf_looseversion )
    %}tcl8.6{%else%}tcl8.5{%endif %}"
  - tcl8.5
  - wv
  - lynx
  - zlib1g
  - wget
  - rsync
  - libcairo2
  - libcairo-gobject2
  - libcairo-script-interpreter2
  - libxml2
  - libxslt1.1
  - python-passlib
  - python3-passlib
  - "{{cops_zope_pkg_ssl}}"
  - "{{cops_zope_pkg_db}}"
  - "python{{cops_zope_pkg_python_slug}}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libcairomm-1.0-1
    {%- else -%}
    libcairomm-1.0-1v5
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libsigc++-2.0-0c2a
    {%- else -%}
    libsigc++-2.0-0v5
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
     %}libwebp6{%else
     %}libwebp5{%endif%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
    %}python-pil{% else
    %}python-imaging{%endif%}"
  - "{% if ansible_distribution_version|copsf_looseversion <= '14.04'|copsf_looseversion

    %}libopenjpeg2{% elif
        ansible_distribution_version|copsf_looseversion < '18.04'|copsf_looseversion
    %}libopenjpeg5{% else
    %}libopenjp2-7{% endif %}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
    %}libgdbm5{%else%}libgdbm3{%endif%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
    %}libreadline7{%else%}libreadline6{%endif%}"
cops_zope_packages: "{{vars['cops_zope_deb_packages___default']}}"
cops_zope_deb_packages___default: "{{
  (cops_zope_deb_runtime_packages + cops_zope_deb_gis_packages)
  | to_json
  }}"
# either null string or "3"
cops_zope_pkg_python_slug: ""
cops_zope_pkg_mysql: "libmysqlclient20"
cops_zope_pkg_ssl: "libssl1.0.0"
cops_zope_pkg_db: "libdb5.3"
cops_zope_deb_build_packages: "{{vars['cops_zope_deb_build_packages___default']}}"
cops_zope_deb_build_packages___default:
  - "libpython{{cops_zope_pkg_python_slug}}-dev"
  - "python{{cops_zope_pkg_python_slug}}-dev"
  - libgdal-dev
  - libreadline-dev
  - libpq-dev
  - libdb-dev
  - libcairo2-dev
  - libssl-dev
  - libcairomm-1.0-dev
  - libgdbm-dev
  - libxml2-dev
  - libgeos-dev
  - libgeoip-dev
  - libxslt1-dev
  - libsqlite0-dev
  - libsqlite3-dev
  - libcurl4-openssl-dev
  - libsigc++-2.0-dev
  - autoconf
  - libfreetype6-dev
  - automake
  - libbz2-dev
  - build-essential
  - liblcms2-dev
  - libtiff5-dev
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
     %}libopenjp2-7-dev{%else%}libopenjpeg-dev{%endif%}"
  - zlib1g-dev
  - libwebp-dev
  - "{% if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >= '18.04'|copsf_looseversion )
    %}tcl8.6-dev{%else%}tcl8.5-dev{%endif %}"
  - "{% if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >= '18.04'|copsf_looseversion )
    %}tk8.6-dev{%else%}tk8.5-dev{%endif %}"
cops_zope_rh_build_packages: []
cops_zope_rh_packages: "{{vars['cops_zope_rh_packages___default']}}"
cops_zope_rh_packages___default: []
# extra conf to add to pgconf (directly added to a tuning conf file (string))
cops_zope_sysctls: []
# cops_zope_domain: "{{ansible_fqdn}}"
cops_zope_domain: "{{cops_app_name}}.corpusops.local"
cops_zope_front_domain: null
# for internal monitoring
cops_zope_query_host: "127.0.0.1"
# for internal service access
cops_zope_restart_check_retries: 60
cops_zope_internal_host: "127.0.0.1"
cops_zope_name: 'zope'
cops_zope_user: "{{vars['cops_zope_name']}}-user"
cops_zope_group: "{{vars['cops_zope_name']}}-group"
cops_zope_projects_dir: "{{corpusops_vars.projects_path}}"
cops_zope_project_sdir: "{{vars['cops_zope_name']}}"
cops_zope_project_dir: "{{vars['cops_zope_projects_dir']}}/{{vars['cops_zope_project_sdir']}}"
cops_zope_project_root: "{{vars['cops_zope_project_dir']}}/project"
cops_zope_data_root: "{{vars['cops_zope_project_dir']}}/data"
cops_zope_cfg: "{{vars['cops_zope_data_root']}}/config"
cops_zope_fixperms: "{{vars['cops_zope_project_dir']}}/fixperms.sh"
cops_zope_fixperms_cron: "/etc/cron.d/{{vars['cops_zope_name']}}-fixperms"
cops_zope_fixperms_cron_periodicity: "30 1 * * *"
cops_zope_secret_variables:
  - admin_password
cops_zope_cops_format_resolve_topdb: false
cops_zope_cops_do_format_resolve: false
cops_zope_haproxy_restart_action: restarted
cops_zope_cops_sub_namespaces:
  buildout: {}
  eggver: {}
  nginx: {}
  front_nginx: {}
  s: {}
  lifecycle: {}
cops_zope_use_etc_hosts: false
cops_zope_zope_uri: "http://{{vars['cops_zope_domain']}}"
cops_zope_env_overrides: {}
cops_zope_env: {}
cops_zope_zope_bind_host: '127.0.0.1'
# templates
## entry point
cops_zope_provision_dir: /provision_dir
cops_zope_ep_template: "../templates/app_entry_point"
cops_zope_ep_playbook: ".ansible/playbooks/site.yml"
cops_zope_docker_has_front_haproxy: false
cops_zope_docker_has_nginx: false
cops_zope_docker_has_zeo: false
cops_zope_docker_has_zope: false
cops_zope_docker_has_balancer: "{{cops_zope_docker_has_zope}}"
# global orchestration steps (db, code sync, web & workers prereqs, zope config)
cops_zope_become: true
cops_zope_yarn_cmd: "yarn"
cops_zope_yarn_install_args: ""
cops_zope_yarn_build_args: ""
cops_zope_yarn_extra_steps: []
jango_yarn_extra_steps: []
#  - "add --force file:{{vars['cops_zope_project_root']}}/develop/plone.restapi-angular"
cops_zope_ep_main_ep: "/entry_point"
# service
cops_zope_service: "supervisor.{{vars['cops_zope_name']}}"
cops_zope_services: ["{{vars['cops_zope_service']}}", "nginx"]
cops_zope_services_nginx_reload_state: "reloaded"
# cops_zope_rhandlers: [restart_cops_zope]
cops_zope_rhandlers: [restart_cops_zope_systemd, restart_cops_zope]
# Reconfigure upon image reboots
cops_zope_reconfigure_services: |-
  {% set ret = [] %}
  {% if ansible_virtualization_type in ['docker'] %}
  {% set _ = ret.append("post-start-{{vars['cops_zope_service']}}") %}
  {% endif %}
  {{ ret | to_json }}
cops_zope_activated: true
# Layout, files & configs
cops_zope_stickymode: "2"
cops_zope_files: "{{vars['cops_zope_files___default']}}"
cops_zope_files___default:
  - {path: "{{vars['cops_zope_projects_dir']}}",
     owner: root, group: root, state: directory}
  - {path: "{{vars['cops_zope_project_dir']}}",
     owner: root, group: root, state: directory}
  - {path: "{{vars['cops_zope_project_root']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_data_root']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}751"}
  - {path: "{{vars['cops_zope_project_root']}}/bin",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_project_root']}}/sbin",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {src: "{{vars['cops_zope_project_root']}}/bin",
     path: "{{vars['cops_zope_data_root']}}/bin",
     state: link, force: true}
  - {path: "{{vars['cops_zope_front_doc_root']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_doc_root']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_ui']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_buildout_cache']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_locations_blob_storage']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_locations_blob_backup']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_parts_directory']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_buildout_cache']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_cache_directory']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_var_directory']}}/buildout-cache",
     src: "{{vars['cops_zope_cache_directory']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: link, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_eggs_directory']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_downloads_directory']}}",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {path: "{{vars['cops_zope_var_directory']}}/project-parts",
     src: "{{vars['cops_zope_zroot']}}/parts",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: link, mode: "{{vars['cops_zope_stickymode']}}750"}
  - {src: "{{vars['cops_zope_var_directory']}}",
     path: "{{vars['cops_zope_zroot']}}/var",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: link, mode: "{{vars['cops_zope_stickymode']}}750"}
cops_zope_parts_directory: "{{vars['cops_zope_project_root']}}/parts"
cops_zope_buildout_cache: "{{vars['cops_zope_zroot']}}/buildout_download_cache"
# Config files
cops_zope_configs: "{{vars['cops_zope_configs___default']}}"
cops_zope_configs___default:
  - {src: "../templates/crons",
     dest: "/etc/cron.d/zope-{{vars['cops_zope_name']}}",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "../templates/restart.sh",
     dest: "{{vars['cops_zope_data_root']}}/restart.sh",
     mode: "0755",
     owner: "{{vars['cops_zope_user']}}",
     group: "{{vars['cops_zope_group']}}"}
  - {src: "../templates/logrotate.conf",
     dest: "{{vars['cops_zope_logrotate_conf']}}",
     mode: "0640",
     owner: "root",
     group: "root"}
  - {src: "../templates/zeoauth.db",
     dest: "{{vars['cops_zope_authentication_db']}}",
     mode: "0640",
     owner: "{{vars['cops_zope_user']}}",
     group: "{{vars['cops_zope_group']}}"}
  - {src: "../templates/supervisor.service",
     dest: "/etc/systemd/system/supervisor.{{vars['cops_zope_name']}}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
cops_zope_venv_files: "{{vars['cops_zope_venv_files___default']}}"
cops_zope_venv_files___default:
  - {path: "{{vars['cops_zope_data_root']}}/bin",
     owner: "{{vars['cops_zope_user']}}", group: "{{vars['cops_zope_group']}}",
     state: directory, mode: "{{vars['cops_zope_stickymode']}}750"}
cops_zope_venv_configs: "{{vars['cops_zope_venv_configs___default']}}"
cops_zope_venv_configs___default:
  - {src: "../templates/buildpy.sh",
     dest: "{{vars['cops_zope_data_root']}}/bin/buildpy.sh",
     mode: "0755",
     owner: "{{vars['cops_zope_user']}}",
     group: "{{vars['cops_zope_group']}}"}
cops_zope_fixperms_configs: "{{vars['cops_zope_fixperms_configs___default']}}"
cops_zope_fixperms_configs___default:
  - {src: "../templates/fixperms.sh",
     dest: "{{vars['cops_zope_fixperms']}}", mode: "0755",
     owner: root, group: root}
cops_zope_ep_configs: "{{vars['cops_zope_ep_configs___default']}}"
cops_zope_ep_configs___default:
  # script to reconfigure image before and often after
  # image entry point (generally systemd) is launched
  - {src: "../templates/reconfigure.sh",
     dest: "{{vars['cops_zope_reconfigure']}}",
     mode: "0755",
     owner: "root",
     group: "root"}
  - {src: "../templates/post-start-reconfigure.service",
     dest: "/etc/systemd/system/post-start-{{vars['cops_zope_service']}}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "{{vars['cops_zope_ep_template']}}",
     dest: "/app_entry_point", mode: "0755",
     owner: root, group: root}
cops_zope_buildoutconfigs: "{{vars['cops_zope_buildoutconfigs___default']}}"
cops_zope_buildoutconfigs___default:
- {src: "../templates/buildout.cfg",
   dest: "{{vars['cops_zope_buildout_cfg']}}",
   mode: "0640",
   owner: "{{vars['cops_zope_user']}}",
   group: "{{vars['cops_zope_group']}}"}
- {src: "../templates/buildout-local.cfg",
   dest: "{{vars['cops_zope_project_root']}}/etc/sys/settings-local.cfg",
   mode: "0640",
   owner: "{{vars['cops_zope_user']}}",
   group: "{{vars['cops_zope_group']}}"}
# SystemD based reconfigure unit settings
cops_zope_reconfigure_service_stderr: ""
cops_zope_reconfigure_service_stdout: ""
cops_zope_reconfigure_unit_after: "network.target {{vars['cops_zope_service']}}.service"
cops_zope_reconfigure_install_wantedby: "multi-user.target"
cops_zope_reconfigure: "{{vars['cops_zope_provision_dir']}}/ansible_reconfigure.sh"
cops_zope_reconfigure_passenv: >
  COPS_ROOT NO_SILENT NO_OUTPUT NONINTERACTIVE
  ANSIBLE_CWD ANSIBLE_PLAY ANSIBLE_VARARGS ANSIBLE_ARGS
  A_VAULTS_FOLDERS A_VAULTS A_EXTRA_VAULTS
  A_INVENTORY A_ENV_NAME NO_DEFAULT_VAULTS
# Code synchronnisation settings (FORCE_COPS_PROVISION_PUSH_CODE to force)
cops_zope_push_codes_cwd: "{{vars['cops_cwd']}}"
cops_zope_push_codes_sync_mode: "{{ (
  cops_installer_mode in ['vagrant'] or
  ansible_virtualization_type in ['docker']
  ) and 'rsync' or 'git' }}"
cops_zope_push_codes_file_tests:
  git: []
  rsync: ["buildout.cfg", "setup.py", ".git"]
cops_zope_push_codes_rsync_opts:
  git:   ["-azv",                           "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
  rsync: ["-azv", "--include", ".git/**/*", "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
cops_zope_push_codes_rsync_submodule_opts:
  git:   ["-azv", "--exclude", "*.retry"]
  rsync: ["-azv", "--exclude", "*.retry"]
cops_zope_force_push_code: false
cops_zope_push_codes:
- path: "{{vars['cops_zope_project_root']}}"
  origin_path: "{{vars['cops_zope_push_codes_cwd']}}"
  force_sync: "{{cops_zope_force_push_code}}"
  sync_mode: "{{cops_zope_push_codes_sync_mode}}"
  rsync_opts: "{{cops_zope_push_codes_rsync_opts[cops_zope_push_codes_sync_mode]}}"
  file_tests: "{{cops_zope_push_codes_file_tests[cops_zope_push_codes_sync_mode]}}"
  owner: "{{vars['cops_zope_user']}}"
  group: "{{vars['cops_zope_group']}}"
  sub_paths:
  - path: local/setups.zope
    force_sync: "{{cops_zope_force_push_code}}"
    rsync_opts: "{{cops_zope_push_codes_rsync_submodule_opts[cops_zope_push_codes_sync_mode]}}"
    is_submodule: true
# SSH deploy settings -> env vault
cops_deploy_ssh_key_paths:
  deploy:
    path: "{{'local/.ssh/deploy_key'|copsf_abspath}}"
    pub: "{{cops_deploy_ssh_pub_key|default('')}}"
    #  ssh-rsa xxx x@y
    # should be in encypted vault
    private: "{{cops_deploy_ssh_key|default('')}}"
    # -----BEGIN RSA PRIVATE KEY-----
    # -----END RSA PRIVATE KEY-----
# Reverse proxy Nginx
cops_zope_default_vhost_is_default_server: false
cops_zope_logrotate_conf: "/etc/logrotate.d/cops_{{vars['cops_zope_name']}}.conf"
cops_zope_logrotate_rotate: 365
cops_zope_logrotate_size: 10M
cops_zope_htpasswd: "/etc/nginx/{{vars['cops_zope_name']}}-htpasswd"
cops_zope_http_auth_restricted: false
cops_zope_http_users:
- {user: "{{vars['cops_zope_admin_user']}}", password: "{{vars['cops_zope_admin_password']}}"}
#- {user: "myadmin", password: "mypassword"}
cops_zope_rp_max_body_size: "1000M"
cops_zope_http_port: "80"
cops_zope_https_port: "443"
cops_zope_nginx: {}
cops_zope_nginx_domain: "{{vars['cops_zope_domain']}}"
cops_zope_nginx_server_aliases: ["www.{{vars['cops_zope_domain']}}"]
cops_zope_nginx_redirect_aliases: true
cops_zope_nginx_port: "{{vars['cops_zope_http_port']}}"
cops_zope_nginx_ssl_port: "{{vars['cops_zope_https_port']}}"
cops_zope_nginx_content_headless_template: "../templates/zope.headless.nginx.conf"
cops_zope_nginx_content_template: "../templates/zope.nginx.conf"
cops_zope_nginx_top_template: "../templates/zope.nginx.top.conf"
cops_zope_nginx_basename: "corpus-{{vars['cops_zope_name']}}"
cops_zope_nginx_is_default_server: true
cops_zope_nginx_htpasswd: "{{vars['cops_zope_htpasswd']}}"
cops_zope_nginx_ssl_protected: false
cops_zope_nginx_ssl_cert: ""
cops_zope_nginx_ssl_key: ""
cops_zope_nginx_loglevel: crit
cops_zope_nginx_upstream_name: "{{vars['cops_zope_name']}}"
cops_zope_nginx_doc_root: "{{vars['cops_zope_doc_root']}}"
cops_zope_front_dist_folder: "{{vars['cops_zope_project_root']}}/dist"
cops_zope_front_nginx: {}
cops_zope_front_nginx_domain: null
# cops_zope_front_nginx_domain: "front.{{vars['cops_zope_domain']}}"
cops_zope_front_nginx_server_aliases: []
# if front domain isnt activated, the vhost wont be installed (or link removed)
cops_zope_front_nginx_install: "{{cops_zope_front_nginx_domain|copsf_asbool}}"
cops_zope_front_nginx_redirect_aliases: true
cops_zope_front_nginx_port: "{{vars['cops_zope_http_port']}}"
cops_zope_front_nginx_ssl_port: "{{vars['cops_zope_https_port']}}"
cops_zope_front_nginx_content_template: "../templates/front.nginx.conf"
cops_zope_front_nginx_top_template: "../templates/front.nginx.top.conf"
cops_zope_front_nginx_basename: "corpus-front-{{vars['cops_zope_name']}}"
cops_zope_front_nginx_is_default_server: false
cops_zope_front_nginx_ssl_protected: false
cops_zope_front_nginx_htpasswd: "{{vars['cops_zope_nginx_htpasswd']}}"
cops_zope_front_nginx_ssl_cert: "{{vars['cops_zope_nginx_ssl_cert']}}"
cops_zope_front_nginx_ssl_key: "{{vars['cops_zope_nginx_ssl_key']}}"
cops_zope_front_nginx_loglevel: "{{vars['cops_zope_nginx_loglevel']}}"
cops_zope_front_nginx_upstream_name: "{{vars['cops_zope_nginx_upstream_name']}}"
cops_zope_front_nginx_doc_root: "{{vars['cops_zope_front_doc_root']}}"
cops_zope_other_vhosts: []
#- domain: "{{vars['cops_zope_domain']}}"
#  server_aliases: ["www.{{vars['cops_zope_domain']}}"]
#  redirect_aliases: true
#  port: "{{vars['cops_zope_http_port']}}"
#  ssl_port: "{{vars['cops_zope_https_port']}}"
#  content_template: "../templates/plone.conf"
#  top_template: "../templates/plone.top.conf"
#  basename: "foovhost"
#  is_default_server: true
#  htpasswd: "{{vars['cops_zope_htpasswd']}}"
#  ssl_protected: false
#  ssl_cert: ""
#  ssl_key: ""
#  loglevel: crit
#  upstream_name: "{basename}"
#  doc_root: "{{vars['cops_zope_doc_root']}}"
#  plonesite: Plone
#  http_auth_restricted: false
#- domain: "www.foo.net"
#  http_auth_restricted: false
#  server_aliases: ["foo.bet"]
#  redirect_aliases: true
#  port: "{{vars['cops_zope_http_port']}}"
#  ssl_port: "{{vars['cops_zope_https_port']}}"
#  content_template: "../templates/redirect.conf"
#  top_template: "../templates/redirect.top.conf"
#  basename: "epersyloisirs"
#  is_default_server: false
#  htpasswd: "{{vars['cops_zope_htpasswd']}}"
#  ssl_protected: false
#  ssl_cert: ""
#  ssl_key: ""
#  loglevel: crit
#  upstream_name: "{basename}"
#  doc_root: "{{vars['cops_zope_doc_root']}}"
#  redirects:
#  - "http://www.otherfoo.net"
#
cops_zope_pip_root: "{{vars['cops_zope_project_root']}}"
# only needed when wanting to build Python from source
cops_zope_build_py: false
cops_zope_py_full_ver: "{{vars['cops_zope_py_ver']}}.13"
cops_zope_py_ver: "2.7"
cops_zope_py_inst: "{{vars['cops_zope_data_root']}}/python"
cops_zope_orig_py: null
cops_zope_venv_bin: virtualenv
cops_zope_force_ssl: false
cops_zope_doc_root: "{{vars['cops_zope_data_root']}}/www"
cops_zope_front_doc_root: "{{vars['cops_zope_doc_root']}}"
cops_zope_var_directory: "{{vars['cops_zope_data_root']}}/var"
cops_zope_cache_directory: "{{vars['cops_zope_buildout_cache']}}/buildout-cache"
cops_zope_downloads_directory: "{{vars['cops_zope_cache_directory']}}/downloads"
cops_zope_eggs_directory: "{{vars['cops_zope_cache_directory']}}/eggs"
cops_zope_cron_hour: 1
cops_zope_cron_minute: 5
cops_zope_cron_periodicity_pack: "{{ cops_zope_cron_minute + 0  }} {{vars['cops_zope_cron_hour']}} * * 6"
cops_zope_cron_periodicity_backup_inc: "{{ cops_zope_cron_minute + 15 }} {{vars['cops_zope_cron_hour']}} * * *"
cops_zope_cron_periodicity_backup_snap: "{{ cops_zope_cron_minute + 45 }} * * * 6"
cops_zope_cron_periodicity_restart: "{{ cops_zope_cron_minute + 30 }}  {{vars['cops_zope_cron_hour']}} * * *"
cops_zope_authentication_user: admin
cops_zope_authentication_password: secret
cops_zope_authentication_realm: ZEO
cops_zope_authentication_db: "{{vars['cops_zope_zroot']}}/etc/sys/zeoauth.db"
cops_zope_crons: "{{vars['cops_zope_crons___default']}}"
cops_zope_crons___default:
  - "# MAILTO=foobar"
  - "# weekly pack"
  - "{{vars['cops_zope_cron_periodicity_pack']}}        {{vars['cops_zope_user']}} {{vars['cops_zope_project_root']}}/bin/zeoserver-zeopack 2>&1 >/dev/null"
  - "# daily restart"
  - "{{vars['cops_zope_cron_periodicity_restart']}}     {{vars['cops_zope_user']}} {{vars['cops_zope_data_root']}}/restart.sh           2>&1 >/dev/null"
  - "# daily incremental save"
  - "{{vars['cops_zope_cron_periodicity_backup_inc']}}  {{vars['cops_zope_user']}} {{vars['cops_zope_project_root']}}/bin/backup            2>&1 >/dev/null"
  - "#  weekly full save"
  - "{{vars['cops_zope_cron_periodicity_backup_snap']}} {{vars['cops_zope_user']}} {{vars['cops_zope_project_root']}}/bin/snapshotbackup    2>&1 >/dev/null"
# does the front and the instances autoconfigure themselves
cops_zope_nbinstances: 4
cops_zope_autostart: 'true'
cops_zope_autostart1: "{{vars['cops_zope_autostart']}}"
cops_zope_autostart2: 'false'
cops_zope_autostart3: 'false'
cops_zope_autostart4: 'false'
cops_zope_supervision_unit_restart: "always"
cops_zope_supervision_unit_restartsec: "50s"
cops_zope_supervision_unit_stopsec: "50s"
cops_zope_cluster_front_host: "localhost"
cops_zope_cluster_front_port: "8083"
cops_zope_ui: "{{vars['cops_zope_project_root']}}/unifiedinstaller_cache"
cops_zope_installer_url: "http://launchpad.net/plone/${plone_major}/${plone_ver}/+download/Plone-${plone_ver}-UnifiedInstaller.tgz"
cops_zope_plone_arc: "{{vars['cops_zope_ui']}}/unifiedinstaller.tgz"
cops_zope_zroot: "{{vars['cops_zope_project_root']}}"
cops_zope_py_root: "{{vars['cops_zope_project_root']}}/venv"
cops_zope_py: "{{vars['cops_zope_py_root']}}/bin/python"
cops_zope_requirements:
- "{{vars['cops_zope_project_root']}}/requirements.txt"
cops_zope_skip_eggs_cache: false
# head |tail (default head)
cops_zope_link_selector_mode: head
cops_zope_admin_user: "admin"
cops_zope_admin_password: null
cops_zope_restarted: instance1
cops_zope_eggver_setuptools: 33.1.1
cops_zope_eggver_buildout: 2.11.3
cops_zope_venv_site_packages: false
cops_zope_venv_egg_develoo_args: "--no-deps"
cops_zope_venv_eggs: "{{vars['cops_zope_venv_eggs___default']}}"
cops_zope_venv_eggs___default:
  - "pip"
  - "zc.buildout=={{vars['cops_zope_eggver_buildout']}}"
  - "setuptools=={{vars['cops_zope_eggver_setuptools']}}"
cops_zope_buildout_extends: "buildout-prod.cfg"
# EG: To activate mailinglogger
# cops_zope_buildout_extends: "buildout-prod.cfg etc/sys/mailinglogger.cfg"
# Or to use dev mode
# cops_zope_buildout_extends: "buildout.cfg"
cops_zope_locations_blob_storage_dir: "{{vars['cops_zope_var_directory']}}/blobstorage"
cops_zope_locations_blob_storage: "{{vars['cops_zope_locations_blob_storage_dir']}}/storage"
cops_zope_locations_blob_backup:  "{{vars['cops_zope_locations_blob_storage_dir']}}/backup"
cops_zope_buildout_bootstrap: "bootstrap-buildout.py"
# cops_zope_buildout_bootstrap_args: "--setuptools-version={{vars['cops_zope_eggver_setuptools']}} -v {{vars['cops_zope_eggver_buildout']}}"
cops_zope_buildout_bootstrap_args: "--setuptools-version={{vars['cops_zope_eggver_setuptools']}} -v {{vars['cops_zope_eggver_buildout']}} -c {{vars['cops_zope_buildout_cfg']}}"
cops_zope_buildout_cwd: "{{vars['cops_zope_zroot']}}"
cops_zope_buildout_cmd: "{{vars['cops_zope_zroot']}}/bin/buildout"
cops_zope_buildout_cmd_args: "-Nc"
cops_zope_buildout_args: "{{vars['cops_zope_buildout_cmd_args']}} {{vars['cops_zope_buildout_cfg']}}"
cops_zope_buildout_version: 2
cops_zope_buildout_newest: false
cops_zope_buildout_cfg: "{{vars['cops_zope_project_root']}}/buildout-ansible.cfg"
cops_zope_buildout_develop_up: "bin/develop up -f"
cops_zope_smtp_user: root
cops_zope_smtp_password: null
cops_zope_overrides_buildout_secret: {}
cops_zope_overrides_buildout: {}
cops_zope_ht_restarttime: "12"
cops_zope_ht_string: "zope"
cops_zope_disabled_urls: []
cops_zope_ldap_url: ""
# cops_zope_ldap_url: "ldap://ldap.net/dc=m,dc=com?uid?sub?(objectClass=person)"
cops_zope_ldap_binddn: ""
# cops_zope_ldap_binddn: "uid=f,dc=e,dc=e"
cops_zope_ldap_binddn_passwd: "foo"
# XXX
cops_zope_buildout_settings: "{{vars['cops_zope_buildout_settings___default']}}"
cops_zope_buildout_settings___default:
    buildout:
      extends: "{{vars['cops_zope_buildout_extends']}}"
      newest: "false"
      unzip: "true"
      cache-directory: "{{vars['cops_zope_cache_directory']}}"
      download-cache: "{{vars['cops_zope_downloads_directory']}}"
      download-directory: "{{vars['cops_zope_downloads_directory']}}"
      eggs-directory: "{{vars['cops_zope_eggs_directory']}}"
      parts-directory: "{{vars['cops_zope_parts_directory']}}"
    v:
      mailinglogger-smtp-server: "localhost:25"
      mailinglogger-smtp-use-tls: "no"
      mailinglogger-smtp-user: "{{cops_zope_smtp_user}}"
      mailinglogger-smtp-password: "{{cops_zope_smtp_password}}"
      mailinglogger-to: "${v:mailinglogger-smtp-user}"
      mailinglogger-from: "${v:mailinglogger-smtp-user}"
      sys-user: "{{vars['cops_zope_user']}}"
      sys-group: "{{vars['cops_zope_group']}}"
      admin-user: "{{vars['cops_zope_admin_user']}}"
      admin-password: "{{vars['cops_zope_admin_password']}}"
      project: "{{vars['cops_zope_name']}}"
      proxycache_size: '256M'
      anon_cache_time: '600s'
      autostart_instance1: "{{vars['cops_zope_autostart1']}}"
      autostart_instance2: "{{vars['cops_zope_autostart2']}}"
      autostart_instance3: "{{vars['cops_zope_autostart3']}}"
      autostart_instance4: "{{vars['cops_zope_autostart4']}}"
      plonesite: 'site'
      zeo-pack-days: '0'
      z2-log-level: 'INFO'
      event-log-level: 'INFO'
      debug: 'off'
      verbose-security: 'off'
      zeo-client-cache-size: '80MB'
      session-timeout-minutes: '90'
      rewrite-max-age: 'false'
      supervisor-user: '${v:admin-user}'
      supervisor-password: '${v:admin-password}'
      supervisor-nodaemon: 'true'
    # zeoserver 5 does not support passwordauth anymore
    # zeoserver:
    #   authentication-database: "{{vars['cops_zope_authentication_db']}}"
    #   authentication-realm: "{authentication_realm}"
    #   pack-password: "{authentication_password}"
    #   pack-user: "{authentication_user}"
    versions:
      zc.buildout: "{{vars['cops_zope_eggver_buildout']}}"
      setuptools: "{{vars['cops_zope_eggver_setuptools']}}"
    ports:
      supervisor: '8081'
      zeo: '8082'
      instance: '8084'
      balancer: "{{vars['cops_zope_cluster_front_port']}}"
      instance1: '8085'
      instance2: '8086'
      instance3: '8087'
      instance4: '8088'
    crons:
      nb_backups_to_keep: '1'
      nb_fullbackups_to_keep: '2'
    locations:
      locations-tmp: '${buildout:directory}/var/tmp'
      # attention, must be compatible with mc_project var interpolation !
      locations-blob-storage: "{{vars['cops_zope_locations_blob_storage']}}"
      locations-blob-backup:  "{{vars['cops_zope_locations_blob_backup']}}"
    hosts:
      syslog:     "{{vars['cops_zope_hosts_syslog']}}"
      zeo:        "{{vars['cops_zope_hosts_zeo']}}"
      supervisor: "{{vars['cops_zope_hosts_supervisor']}}"
      balancer:   "{{vars['cops_zope_hosts_balancer']}}"
      instance:   "{{vars['cops_zope_hosts_instance']}}"
      instance1:  "{{vars['cops_zope_hosts_instance1']}}"
      instance2:  "{{vars['cops_zope_hosts_instance2']}}"
      instance3:  "{{vars['cops_zope_hosts_instance3']}}"
      instance4:  "{{vars['cops_zope_hosts_instance4']}}"
cops_zope_hosts_syslog: "${hosts:ip}"
cops_zope_hosts_zeo: "${hosts:ip}"
cops_zope_hosts_supervisor: "${hosts:ip}"
cops_zope_hosts_balancer: "${hosts:ip}"
cops_zope_hosts_instance: "${hosts:address}"
cops_zope_hosts_instance1: "${hosts:ip}"
cops_zope_hosts_instance2: "${hosts:ip}"
cops_zope_hosts_instance3: "${hosts:ip}"
cops_zope_hosts_instance4: "${hosts:ip}"
# vim:set ft=sls:
