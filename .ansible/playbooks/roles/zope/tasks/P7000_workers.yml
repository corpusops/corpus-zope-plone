---
- when: ["cops_zope_s_workers_service and corpusops_vars.has_services_manager"]
  tags: ["cops_zope_s_workers_service"]
  block:
  # activate the main app service
  - service:
      state: "{{cops_zope_vars.activated | ternary('started', 'stopped')}}"
      enabled: "{{cops_zope_vars.activated | ternary(True, False)}}"
      name: "{{item}}"
    with_items: "{{cops_zope_vars.services}}"
  # this will fail on non systemd hosts on purpose !
  # if we have activated the reconfigure units (docker mode essentially)
  - systemd:
      enabled: "{{cops_zope_vars.activated | ternary(True, False)}}"
      daemon_reload: yes
      name: "{{item}}"
    with_items: "{{cops_zope_vars.reconfigure_services}}"
  # force a reload/restart here
  - shell: echo "force service reload/restart"
    notify: "{{cops_zope_vars.rhandlers}}"
  - meta: flush_handlers
 

- tags: ["cops_zope_s_workers_checks"]
  when: ["cops_zope_s_workers_checks and (
          corpusops_vars.has_services_manager and
          cops_zope_vars.activated)"]
  block:
  # Check reverse proxy is listening
  - uri:
      url: "http://{{cops_zope_vars.query_host}}:{{cops_zope_vars.nginx.port}}/"
      return_content: true
      headers:
        Host: "{{cops_zope_vars.domain}}"
    register: cops_zope_check1
    # TODO: @kiorky check we only have an HTTP response (any status)
    failed_when: "not 'html' in cops_zope_check1.content"
    until: "('{0}'.format(cops_zope_check1.status)[0]
              in ['1','2','3','4','5','6','7','8','9'])"
    retries: 10
    delay: 1
  
  # Check zope stack to be up
  - register: cops_zope_check2
    until: "      'zope'     in '{0}'.format(cops_zope_check2.get('server', '')).lower()"
    failed_when: "'zope' not in '{0}'.format(cops_zope_check2.get('server', '')).lower()"
    retries: "{{cops_zope_vars.restart_check_retries}}"
    delay: 1
    no_log: "{{not (cops_vars_debug|default(false))}}"
    uri:
      url: "http://{{cops_zope_vars.cluster_front_host}}:{{cops_zope_vars.cluster_front_port}}"
      headers: {Host: "{{cops_zope_vars.domain}}"}
      return_content: true
