---
- become: true
  become_user: "{{cops_zope_vars.user}}"
  block:
  - tags: [cops_zope_s_setup_venv_buildpy]
    when: [cops_zope_s_setup_venv_buildpy]
    block:
      - when: "cops_zope_vars.build_py"
        shell: |-
          export PREFIX="{{cops_zope_vars.py_inst}}"
          {% if "{0}".format(cops_zope_vars.py_ver).count('.') > 1 %}
          export PY_VER="{{cops_zope_vars.py_ver}}"
          {% endif %}
          {{cops_zope_vars.data_root}}/buildpy.sh
        changed_when: false
  - tags: [cops_zope_s_setup_venv_venv]
    when: [cops_zope_s_setup_venv_venv]
    block:
      - include_tasks: _setup_venv_eggs.yml
  - tags: [cops_zope_s_setup_venv_requirements]
    when: [cops_zope_s_setup_venv_requirements]
    environment:
       CFLAGS: "-I/usr/include/gdal"
    block:
      - stat: {path: "{{cops_zope_vars.requirements}}"}
        register: cops_c_zope_venv_req
      - when: cops_c_zope_venv_req.stat.exists
        pip:
          requirements: "{{cops_zope_vars.requirements}}"
          state: present
          virtualenv: "{{cops_zope_vars.py_root}}"
          virtualenv_python: "{{(
            (cops_zope_vars.build_py and
            '{0}/bin/python'.format(cops_zope_vars.py_inst)) or
            cops_zope_vars.get('orig_py', None) or
            '/usr/bin/python{0}'.format(cops_zope_vars.py_ver))}}"
          virtualenv_command: "{{(
            cops_zope_vars.build_py and
            '{0}/bin/virtualenv'.format(cops_zope_vars.py_inst) or
            cops_zope_vars.get('venv_bin', None))}}"
          virtualenv_site_packages: "{{cops_zope_vars.venv_site_packages}}"
